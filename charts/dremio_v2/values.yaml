# The Dremio image used in the cluster.
#
# It is *highly* recommended to update the version tag to
# the version that you are using. This will ensure that all
# the pods are using the same version of the software. If
# you are directly consuming Dremio's images from Docker Hub,
# when specifying which version to use, it is best to use the
# full version tag in the form X.Y.Z (i.e. 21.1.0), as image
# tags in the form X.Y (i.e. 21.1) are updated with the latest
# patch version released.
#
# Using the image tag latest or in the form X.Y
# will potentially cause Dremio to upgrade versions
# automatically during redeployments and may negatively impact
# the cluster.

# Image source quay.io/dremio/dremio-ee
image: <your_aws_account_id>.dkr.ecr.eu-central-1.amazonaws.com/dremio-ee
imageTag: 25.2.10

# Image source docker.io/busybox
busybox:
  image: <your_aws_account_id>.dkr.ecr.eu-central-1.amazonaws.com/dremio-busybox
  imageTag: latest

# Image source: bitnami/kubectl
backup:
  image: <your_aws_account_id>.dkr.ecr.eu-central-1.amazonaws.com/kubectl
  imageTag: latest
  path: dremioS3:///bucket_name/master-backup
  schedule: "0 2 * * *"

storageClasses:
  - name: dremio-master-io2
    iops: 6000
    type: io2
    encrypted: true
  - name: dremio-logs-gp3
    iops: 1200
    type: gp3
    encrypted: true
  - name: dremio-zk-gp3
    iops: 1200
    type: gp3
    encrypted: true

# Please use disks with local NVME for the executors.
# The disks will be provided via emptyDir on the executors for C3 and spilling
nodePools:
  - name: dremio-zk-pool
    instanceTypes: ["c6i.large"]
    zones: ["eu-central-1c"]
  - name: dremio-coordinator-pool
    instanceTypes: ["r5.4xlarge", "m5.8xlarge"]
    zones: ["eu-central-1c"]
  - name: dremio-executor-pool
    instanceTypes: ["r5d.4xlarge", "m5d.8xlarge"]
    zones: ["eu-central-1c"]

webAuth:
  # values can be: none, azuread, oauth, ldap
  type: none
  base64encoded: false
  configJson: |-
    {
      "clientId": "your_client_id",
      "clientSecret": "your_secret",
      "redirectUrl": "https://yourdomain/sso",
      "authorityUrl": "https://accounts.google.com",
      "scope": "openid profile email",
      "jwtClaims": {
        "userName": "email"
      }
    }

# Annotations, labels, node selectors, and tolerations
#
# annotations: Annotations are applied to the StatefulSets that are deployed.
# podAnnotations: Pod annotations are applied to the pods that are deployed.
# labels: Labels operate much like annotations.
# podLabels: Labels that are applied to the pods that are deployed.
# nodeSelector: Target pods to nodes based on labels set on the nodes. For more
#   information, see https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
# tolerations: Tolerations allow the negation of taints that have been applied to some set of nodes
#   in the Kubernetes cluster so that pods can be scheduled on those tainted nodes.
annotations: {}
podAnnotations: {}
labels: {}
podLabels: {}
nodeSelector: {}
tolerations:
  - key: "dremio"
    operator: "Exists"
    effect: "NoExecute"

# Dremio Coordinator
coordinator:
  # CPU & Memory
  # Memory allocated to each coordinator, expressed in MB.
  # CPU allocated to each coordinator, expressed in CPU cores.
  cpu: 15
  memory: 116736

  # This count is used for slave coordinators only.
  # The total number of coordinators will always be count + 1.
  # If this is greater than zero then the client and flight ports on the master
  # will be deactivated to steer these requests away from the master node.
  count: 0

  # Coordinator data volume size (applies to the master coordinator only).
  # In most managed Kubernetes environments (AKS, GKE, etc.), the size of the disk has a direct impact on
  # the provisioned and maximum performance of the disk.
  volumeSize: 512Gi
  metricsPort: 9010

  # Kubernetes Service Account
  # Uncomment below to use a custom Kubernetes service account for the coordinator.
  #serviceAccount: ""

  # Uncomment the lines below to use a custom set of extra startup parameters for the coordinator.
  extraStartParams: >-
    -Dservices.web-admin.port=9010 -Dservices.web-admin.enabled=true -Dservices.web-admin.host=0.0.0.0
    -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:G1HeapRegionSize=32M -XX:InitiatingHeapOccupancyPercent=25 -XX:+AlwaysPreTouch

  # Extra Init Containers
  # Uncomment the below lines to use a custom set of extra init containers for the coordinator.
  #extraInitContainers: |
  #  - name: extra-init-container
  #    image: {{ $.Values.image }}:{{ $.Values.imageTag }}
  #    command: ["echo", "Hello World"]

  # Extra Volumes
  # Uncomment below to use a custom set of extra volumes for the coordinator.
  #extraVolumes: []

  # Extra Volume Mounts
  # Uncomment below to use a custom set of extra volume mounts for the coordinator.
  #extraVolumeMounts: []

  # Extra Environment Variables
  # Uncomment below to add extra environment variables for the coordinator.
  #extraEnvs: []

  # Uncomment this value to use a different storage class for the coordinator.
  storageClass: dremio-master-io2

  # Uncomment this value to use a different storage class for the coordinator logs.
  logStorageClass: dremio-logs-gp3

  # Whether to write coordinator logs to a file on disk. Disabled by default.
  # When enabled, log messages are logged to the console and written to a persistent volume mounted at /opt/dremio/log.
  # When disabled, log messages are logged to the console only.
  writeLogsToFile: true

  # These values, when defined, override the provided shared annotations, labels, node selectors, or tolerations.
  # Uncomment only if you are trying to override the chart's shared values.
  #annotations: {}
  #podAnnotations: {}
  #labels: {}
  #podLabels: {}
  nodeSelector:
    karpenter.sh/nodepool: dremio-coordinator-pool
  #tolerations: []

  # Web UI
  web:
    port: 9047
    tls:
      # To enable TLS for the web UI, set the enabled flag to true and provide
      # the appropriate Kubernetes TLS secret.
      enabled: false

      # To create a TLS secret, use the following command:
      # kubectl create secret tls ${TLS_SECRET_NAME} --key ${KEY_FILE} --cert ${CERT_FILE}
      secret: dremio-tls-secret-ui

  # ODBC/JDBC Client
  client:
    port: 31010
    tls:
      # To enable TLS for the client endpoints, set the enabled flag to
      # true and provide the appropriate Kubernetes TLS secret. Client
      # endpoint encryption is available only on Dremio Enterprise
      # Edition and should not be enabled otherwise.
      enabled: false

      # To create a TLS secret, use the following command:
      # kubectl create secret tls ${TLS_SECRET_NAME} --key ${KEY_FILE} --cert ${CERT_FILE}
      secret: dremio-tls-secret-client

  # Flight Client
  flight:
    port: 32010
    tls:
      # To enable TLS for the Flight endpoints, set the enabled flag to
      # true and provide the appropriate Kubernetes TLS secret.
      enabled: false

      # To create a TLS secret, use the following command:
      # kubectl create secret tls ${TLS_SECRET_NAME} --key ${KEY_FILE} --cert ${CERT_FILE}
      secret: dremio-tls-secret-flight

  # Startup Probe
  startupProbe:
    # Max timeout for the probe is calculated as failureThreshold * periodSeconds
    # failureThreshold: Maximum number of allowed failures
    failureThreshold: 600
    # periodSeconds: Polling frequency expressed in seconds
    periodSeconds: 1

  # Readiness Probe
  readinessProbe:
    # Max timeout for the probe is calculated as failureThreshold * periodSeconds
    # failureThreshold: Maximum number of allowed failures
    failureThreshold: 360
    # periodSeconds: Polling frequency expressed in seconds
    periodSeconds: 1

# Dremio Executor
executor:
  # CPU & Memory
  # Memory allocated to each executor, expressed in MB.
  # CPU allocated to each executor, expressed in CPU cores.
  cpu: 15
  memory: 116736

  # Engines
  # Engine names be 47 characters or less and be lowercase alphanumber characters or '-'.
  # Note: The number of executor pods will be the length of the array below * count.
  engines: ["default"]
  count: 1

  # Executor volume size. (ignored since using emptyDir)
  volumeSize: 300Gi
  # Kubernetes Service Account
  # Uncomment below to use a custom Kubernetes service account for executors.
  #serviceAccount: ""

  # Uncomment the lines below to use a custom set of extra startup parameters for executors.
  extraStartParams: >-
    -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:G1HeapRegionSize=32M -XX:InitiatingHeapOccupancyPercent=25 -XX:+AlwaysPreTouch

  # Extra Init Containers
  # Uncomment the below lines to use a custom set of extra init containers for executors.
  #extraInitContainers: |
  #  - name: extra-init-container
  #    image: {{ $.Values.image }}:{{ $.Values.imageTag }}
  #    command: ["echo", "Hello World"]

  # Extra Volumes
  # Uncomment below to use a custom set of extra volumes for executors.
  #extraVolumes: []

  # Extra Volume Mounts
  # Uncomment below to use a custom set of extra volume mounts for executors.
  #extraVolumeMounts: []

  # Extra Environment Variables
  # Uncomment below to add extra environment variables for the executors.
  #extraEnvs: []

  # Uncomment this value to use a different storage class for executors.
  # storageClass: dremio-logs-gp3

  # Uncomment this value to use a different storage class for the executor logs.
  logStorageClass: dremio-logs-gp3

  # Whether to write executor logs to a file on disk. Disabled by default.
  # When enabled, log messages are logged to the console and written to a persistent volume mounted at /opt/dremio/log.
  # When disabled, log messages are logged to the console only.
  writeLogsToFile: true

  # Dremio C3
  # Designed for use with NVMe storage devices, performance may be impacted when using
  # persistent volume storage that resides far from the physical node.
  cloudCache:
    enabled: true
    volumes:
    - size: 300Gi

    # Uncomment this value to use a different storage class for C3.
    #storageClass:

    # Volumes to use for C3, specify multiple volumes if there are more than one local
    # NVMe disk that you would like to use for C3.
    #
    # The below example shows all valid options that can be provided for a volume.
    # volumes:
    # - name: "dremio-default-c3"
    #   size: 100Gi
    #   storageClass: "local-nvme"
    #    volumes:
    #    - size: 100Gi

  # These values, when defined and not empty, override the provided shared annotations, labels, node selectors, or tolerations.
  # Uncomment only if you are trying to override the chart's shared values.
  #annotations: {}
  #podAnnotations: {}
  #labels: {}
  #podLabels: {}
  nodeSelector:
    karpenter.sh/nodepool: dremio-executor-pool
  #tolerations: []

  # DEPRECATION NOTICE: The nodeLifecycleService feature has been deprecated and is no longer supported.
  # By default, the number of Engines is static. Enable the Node Lifecycle Service
  # to enable dynamic scaling.
  # nodeLifecycleService:
  #   enabled: true
  #   scalingMetrics:
  #     default:
  #       enabled: true
  #   scalingBehavior:
  #     scaleDown:
  #       defaultPolicy:
  #         enabled: true
  #     scaleUp:
  #       defaultPolicy:
  #         enabled: true

  # Engine Overrides
  #
  # The settings above are overridable on a per-engine basis. These
  # values here will take precedence and *override* the configured values
  # on a per-engine basis. Engine overrides are matched with the name in the above
  # list of engines.
  #
  # Special per-engine parameters:
  # volumeClaimName: For each engine, you can optionally specify a value for the volume claim name,
  #   this value must be unique to each engine or may cause unintended consequences. This value is
  #   primarily intended for transitioning an existing single engine to a multi-engine configuration
  #   where there may already have been existing persistent volumes.
  #
  # The below example shows all valid options that can be overridden on a per-engine basis.
  # engineOverride:
  #   engineNameHere:
  #     cpu: 1
  #     memory: 122800
  #
  #     count: 1
  #
  #     annotations: {}
  #     podAnnotations: {}
  #     labels: {}
  #     podLabels: {}
  #     nodeSelector: {}
  #     tolerations: []
  #
  #     nodeLifecycleService:
  #       enabled: true
  #       scalingMetrics:
  #         default:
  #           enabled: true
  #       scalingBehavior:
  #         scaleDown:
  #           defaultPolicy:
  #             enabled: true
  #         scaleUp:
  #           defaultPolicy:
  #             enabled: true
  #
  #     serviceAccount: ""
  #
  #     extraStartParams: >-
  #       -DsomeCustomKey=someCustomValue
  #
  #     extraInitContainers: |
  #       - name: extra-init-container
  #         image: {{ $.Values.image }}:{{ $.Values.imageTag }}
  #         command: ["echo", "Hello World"]
  #
  #
  #     extraVolumes: []
  #     extraVolumeMounts: []
  #     extraEnvs: []
  #
  #     volumeSize: 50Gi
  #     storageClass: managed-premium
  #     logStorageClass: ""
  #     volumeClaimName: dremio-default-executor-volume
  #
  #     cloudCache:
  #       enabled: true
  #
  #       storageClass: ""
  #
  #       volumes:
  #       - name: "default-c3"
  #         size: 100Gi
  #         storageClass: ""

# Zookeeper
# Image source docker.io/zookeeper:3.8.4-jre-17
zookeeper:
  # The Zookeeper image used in the cluster.
  image: <your_aws_account_id>.dkr.ecr.eu-central-1.amazonaws.com/dremio-zookeeper
  imageTag: 3.8.4-jre-17

  # CPU & Memory
  # Memory allocated to each zookeeper, expressed in MB.
  # CPU allocated to each zookeeper, expressed in CPU cores.
  cpu: 1
  memory: 1536
  count: 3

  volumeSize: 16Gi

  # Kubernetes Service Account
  # Uncomment below to use a custom Kubernetes service account for Zookeeper.
  #serviceAccount: ""

  # Uncomment this value to use a different storage class for Zookeeper.
  storageClass: dremio-zk-gp3

  # These values, when defined, override the provided shared annotations, labels, node selectors, or tolerations.
  # Uncomment only if you are trying to override the chart's shared values.
  #annotations: {}
  #podAnnotations: {}
  #labels: {}
  #podLabels: {}
  nodeSelector:
    karpenter.sh/nodepool: dremio-zk-pool
  #tolerations: []

# Control where uploaded files are stored for Dremio.
# For more information, see https://docs.dremio.com/deployment/distributed-storage.html
distStorage:
  # The supported distributed storage types are: local (<21.0.0 only), aws, azure, gcp, or azureStorage.
  #
  # local: (<21.0.0 only) Not recommended for production use. When using local, dist-caching is disabled.
  # aws: AWS S3, additional parameters required, see "aws" section.
  # azure: ADLS Gen 1, additional parameters required, see "azure" section.
  # azureStorage: Azure Storage Gen2, additional parameters required, see "azureStorage" section.
  # gcp: Google Cloud Storage, additional parameters required, see "gcp" section.
  type: "aws"

  # Google Cloud Storage
  #
  # bucketName: The name of the GCS bucket for distributed storage.
  # path: The path, relative to the bucket, to create Dremio's directories.
  # authentication: Valid types are: serviceAccountKeys or auto.
  #   - When using "auto" authentication, Dremio uses Google Application Default Credentials to
  #     authenticate. This is platform dependent and may not be available in all Kubernetes clusters.
  #   - Note: When using a GCS bucket on GKE, we recommend enabling Workload Identity and configuring
  #       a Kubernetes Service Accountfor Dremio with an associated workload identity that
  #       has access to the GCS bucket.
  # credentials: If using serviceAccountKeys authentication, uncomment the credentials section below.
  gcp:
    bucketName: "GCS Bucket Name"
    path: "/"
    authentication: "auto"

    # If using serviceAccountKeys, uncomment the section below, referencing the values from
    # the service account credentials JSON file that you generated:
    #
    #credentials:
    #  projectId: GCP Project ID that the Google Cloud Storage bucket belongs to.
    #  clientId: Client ID for the service account that has access to Google Cloud Storage bucket.
    #  clientEmail: Email for the service account that has access to Google Cloud Storage bucket.
    #  privateKeyId: Private key ID for the service account that has access to Google Cloud Storage bucket.
    #  privateKey: |-
    #    -----BEGIN PRIVATE KEY-----\n Replace me with full private key value. \n-----END PRIVATE KEY-----\n

    # Extra Properties
    # Use the extra properties block to provide additional parameters to configure the distributed
    # storage in the generated core-site.xml file.
    #
    #extraProperties: |
    #  <property>
    #    <name></name>
    #    <value></value>
    #  </property>

  # AWS S3
  # For more details of S3 configuration, see https://docs.dremio.com/deployment/dist-store-config.html#amazon-s3
  #
  # bucketName: The name of the S3 bucket for distributed storage.
  # path: The path, relative to the bucket, to create Dremio's directories.
  # authentication: Valid types are: accessKeySecret, instanceMetadata, or awsProfile.
  #   - Note: Instance metadata is only supported in AWS EKS and requires that the
  #       EKS worker node IAM role is configured with sufficient access rights. At this time,
  #       Dremio does not support using an K8s service account based IAM role.
  # credentials: If using accessKeySecret authentication, uncomment the credentials section below.
  aws:
    bucketName: "AWS Bucket Name"
    path: "/"
    authentication: "metadata"
    # If using accessKeySecret for authentication against S3, uncomment the lines below and use the values
    # to configure the appropriate credentials.
    #
    #credentials:
    #  accessKey: "AWS Access Key"
    #  secret: "AWS Secret"
    #
    # If using awsProfile for authentication against S3, uncomment the lines below and use the values
    # to choose the appropriate profile.
    #
    #credentials:
    #  awsProfileName: "default"
    #
    # Extra Properties
    # Use the extra properties block to provide additional parameters to configure the distributed
    # storage in the generated core-site.xml file.
    #
    #extraProperties: |
    #  <property>
    #    <name></name>
    #    <value></value>
    #  </property>

  # Azure ADLS Gen 1
  # For more details of Azure ADLS Gen 1 storage configuration, see
  # https://docs.dremio.com/deployment/dist-store-config.html#azure-data-lake-storage-gen1
  #
  # datalakeStoreName: The ADLS Gen 1
  azure:
    datalakeStoreName: "Azure DataLake Store Name"
    path: "/"
    credentials:
      applicationId: "Azure Application ID"
      secret: "Azure Application Secret"
      oauth2Endpoint: "Azure OAuth2 Endpoint"

    # Extra Properties
    # Use the extra properties block to provide additional parameters to configure the distributed
    # storage in the generated core-site.xml file.
    #
    #extraProperties: |
    #  <property>
    #    <name></name>
    #    <value></value>
    #  </property>

  # Azure Storage Gen2
  # For more details of Azure Storage Gen2 storage configuration, see
  # https://docs.dremio.com/deployment/dist-store-config.html#azure-storage
  #
  # accountName: The name of the storage account.
  # authentication: Valid types are: accessKey or entraID
  # filesystem: The name of the blob container to use within the storage account.
  # path: The path, relative to the filesystem, to create Dremio's directories.
  # credentials:
  azureStorage:
    accountName: "Azure Storage Account Name"
    authentication: "accessKey"
    filesystem: "Azure Storage Account Blob Container"
    path: "/"
    credentials:
      # If using accessKey for authentication against Azure Storage, uncomment the lines below and use the values
      # to configure the appropriate credentials.
      #accessKey: "Azure Storage Account Access Key"

      # If using entraID for authentication against Azure Storage, uncomment the lines below and use the values
      # to configure the appropriate credentials.
      #clientId: "Azure Application Client ID"
      #tokenEndpoint: "Azure Entra ID Token Endpoint"
      #clientSecret: "Azure Application Client Secret"

    # Extra Properties
    # Use the extra properties block to provide additional parameters to configure the distributed
    # storage in the generated core-site.xml file.
    #
    extraProperties: ""
#    extraProperties: |
#      <property>
#        <name>fs.s3a.endpoint</name>
#        <value>s3.eu-central-1.amazonaws.com</value>
#      </property>
#      <property>
#        <name>dremio.s3.region</name>
#        <value>eu-central-1</value>
#      </property>
#      <property>
#        <name>fs.s3a.assumed.role.sts.endpoint</name>
#        <value>sts.eu-central-1.amazonaws.com</value>
#      </property>

# Dremio Start Parameters
# Uncomment the below lines to provide extra start paramaters to be passed directly to Dremio
# applications (coordinator. executor and dremio-admin) during startup.
#extraStartParams: >-
#  -DsomeKey=someValue

# Extra Init Containers
# Uncomment the below lines to provide extra init containers to be run first.
#extraInitContainers: |
#  - name: extra-init-container
#    image: {{ $.Values.image }}:{{ $.Values.imageTag }}
#    command: ["echo", "Hello World"]

# Kubernetes Service Account
# Uncomment the below line to provide a Kubernetes service account that Dremio should run with.
#serviceAccount: ""

# Extra Volumes
# Array to add extra volumes to all Dremio resources.
extraVolumes: []

# Extra Volume Mounts
# Array to add extra volume mounts to all Dremio resources, normally used in conjunction wtih extraVolumes.
extraVolumeMounts: []

# Extra Environment Variables
# Array to add extra environment variables to Dremio's pods
extraEnvs: []

# Whether to write logs to a file on disk for all Dremio resources. Disabled by default.
# When enabled, log messages are logged to the console and written to a persistent volume mounted at /opt/dremio/log.
# When disabled, log messages are logged to the console only.
#writeLogsToFile: true

# Dremio Service
# The dremio-client service exposes the service for access outside of the Kubernetes cluster.
service:
  type: LoadBalancer
  loadBalancerClass: "eks.amazonaws.com/nlb"
  # These values, when defined and not empty, override the provided shared annotations and labels.
  # Uncomment only if you are trying to override the chart's shared values.
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-listener-attributes.TCP-31010: tcp.idle_timeout.seconds=3600
    service.beta.kubernetes.io/aws-load-balancer-listener-attributes.TCP-32010: tcp.idle_timeout.seconds=3600
#    helm.sh/resource-policy: keep
#    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
#    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:eu-central-1:<your_aws_account_id>:certificate/<uid>

  #labels: {}

  # If the loadBalancer supports sessionAffinity and you have more than one coordinator,
  # uncomment the below line to enable session affinity.
  #sessionAffinity: ClientIP

  # Enable the following flag if you wish to route traffic through a shared VPC
  # for the LoadBalancer's external IP.
  # The chart is setup for internal IP support for AKS, EKS, GKE.
  # For more information, see https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  #internalLoadBalancer: true

  # If you have a static IP allocated for your load balancer, uncomment the following
  # line and set the IP to provide the static IP used for the load balancer.
  # Note: The service type must be set to LoadBalancer for this value to be used.
  #loadBalancerIP: 0.0.0.0

# For private and protected docker image repository, you should store
# the credentials in a kubernetes secret and provide the secret name
# here.  For more information, see
# https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
# imagePullSecrets:
#  - secretname
